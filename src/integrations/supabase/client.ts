
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://svrsfzpkqleyzfllmkcd.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InN2cnNmenBrcWxleXpmbGxta2NkIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDY0MzE3MzcsImV4cCI6MjA2MjAwNzczN30.KhbPDaYJqameZXw-NqOl9TQvTBXB7NpkveY92v_gHPI";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    storage: localStorage
  }
});

/**
 * Vérifie si une table existe de manière sécurisée
 * Note: Ne pas utiliser cette fonction avec rpc car ça provoque des erreurs TS
 */
export async function tableExists(tableName: string): Promise<boolean> {
  try {
    const { error } = await supabase
      .from(tableName as any)
      .select('*')
      .limit(1);
    
    if (error && error.code === '42P01') {
      // Le code 42P01 est l'erreur PostgreSQL "relation does not exist"
      console.log(`Table '${tableName}' does not exist`);
      return false;
    }
    
    return !error;
  } catch (err) {
    console.error(`Erreur lors de la vérification de la table ${tableName}:`, err);
    return false;
  }
}
